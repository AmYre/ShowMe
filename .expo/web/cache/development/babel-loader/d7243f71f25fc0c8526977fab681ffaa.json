{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AmYre\\\\ShowMe\\\\App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport MainNavigator from \"./screens/drawerNavigator\";\nimport { DataContext } from \"./GlobalContext\";\n\nfunction getFonts() {\n  return Font.loadAsync({\n    'Roboto-regular': require(\"./assets/fonts/Roboto-Regular.ttf\"),\n    'Roboto-bold': require(\"./assets/fonts/Roboto-Bold.ttf\"),\n    'Roboto-light': require(\"./assets/fonts/Roboto-Light.ttf\")\n  });\n}\n\n;\nexport default function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontLoaded = _useState2[0],\n      setFontLoaded = _useState2[1];\n\n  if (!fontLoaded) {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontLoaded(true);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      }\n    });\n  }\n\n  return React.createElement(DataContext, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    }\n  }, React.createElement(MainNavigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    }\n  }));\n}\n;","map":{"version":3,"sources":["C:/Users/AmYre/ShowMe/App.js"],"names":["React","useState","useEffect","Font","AppLoading","MainNavigator","DataContext","getFonts","loadAsync","require","App","fontLoaded","setFontLoaded"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAGA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,aAAP;AAEA,SAASC,WAAT;;AAEA,SAASC,QAAT,GAAoB;AACnB,SAAOJ,IAAI,CAACK,SAAL,CAAe;AACrB,sBAAkBC,OAAO,qCADJ;AAErB,mBAAeA,OAAO,kCAFD;AAGrB,oBAAiBA,OAAO;AAHH,GAAf,CAAP;AAKA;;AAAA;AAED,eAAe,SAASC,GAAT,GAAe;AAAA,kBAEOT,QAAQ,CAAC,KAAD,CAFf;AAAA;AAAA,MAEtBU,UAFsB;AAAA,MAEVC,aAFU;;AAI7B,MAAI,CAACD,UAAL,EAAiB;AAChB,WAAO,oBAAC,UAAD;AAAY,MAAA,UAAU,EAAEJ,QAAxB;AAAkC,MAAA,QAAQ,EAAG;AAAA,eAAMK,aAAa,CAAC,IAAD,CAAnB;AAAA,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA;;AAED,SACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADD;AAMA;AAAA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, View, Button } from \"react-native\";\n\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport MainNavigator from \"./screens/drawerNavigator\";\n\nimport { DataContext } from \"./GlobalContext\";\n\nfunction getFonts() {\n\treturn Font.loadAsync({\n\t\t'Roboto-regular': require('./assets/fonts/Roboto-Regular.ttf'),\n\t\t'Roboto-bold': require('./assets/fonts/Roboto-Bold.ttf'),\n\t\t'Roboto-light' : require('./assets/fonts/Roboto-Light.ttf')\n\t})\n};\n\nexport default function App() {\n\n\tconst [fontLoaded, setFontLoaded] = useState(false);\n\n\tif (!fontLoaded) { \n\t\treturn <AppLoading startAsync={getFonts} onFinish={ () => setFontLoaded(true) } />\n\t}\n\n\treturn (\n\t\t<DataContext>\n\t\t\t<MainNavigator />\n\t\t</DataContext>\n\t\t\n\t);\n};"]},"metadata":{},"sourceType":"module"}