{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AmYre\\\\ShowMe\\\\screens\\\\landing.js\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\nimport MyHeaderButton from \"./MyHeaderButton\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport * as ImagePicker from 'expo-image-picker';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport * as Permissions from 'expo-permissions';\nimport * as Location from 'expo-location';\nimport * as FileSystem from 'expo-file-system';\nimport * as Crypto from 'expo-crypto';\n\nvar Landing = function Landing(props) {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      textOCR = _useState2[0],\n      setTextOCR = _useState2[1];\n\n  var allowCam = function allowCam() {\n    var result;\n    return _regeneratorRuntime.async(function allowCam$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n          case 2:\n            result = _context.sent;\n\n            if (!(result.status !== 'granted')) {\n              _context.next = 6;\n              break;\n            }\n\n            Alert.alert('Permission nécessaire', 'Votre permission est nécessaire pour utiliser l\\'appareil photo', [{\n              text: 'Compris'\n            }]);\n            return _context.abrupt(\"return\", false);\n\n          case 6:\n            return _context.abrupt(\"return\", true);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n\n  var allowLoc = function allowLoc() {\n    var result;\n    return _regeneratorRuntime.async(function allowLoc$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.LOCATION));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!(result.status !== 'granted')) {\n              _context2.next = 6;\n              break;\n            }\n\n            Alert.alert('Permission localisation nécessaire', 'Votre permission est nécessaire afin d\\'aider les services concernés à localiser le véhicule scané', [{\n              text: 'Compris'\n            }]);\n            return _context2.abrupt(\"return\", false);\n\n          case 6:\n            return _context2.abrupt(\"return\", true);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n\n  var launchCam = function launchCam() {\n    var allowedCam, allowedLoc, image, imageFormat, imageName, imagePath, timestamp, api_key, api_secret, cloud, hash_string, digest, signature, upload_url, xhr, formData, screen;\n    return _regeneratorRuntime.async(function launchCam$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return _regeneratorRuntime.awrap(allowCam());\n\n          case 2:\n            allowedCam = _context4.sent;\n            _context4.next = 5;\n            return _regeneratorRuntime.awrap(allowLoc());\n\n          case 5:\n            allowedLoc = _context4.sent;\n\n            if (!(!allowedCam || !allowedLoc)) {\n              _context4.next = 8;\n              break;\n            }\n\n            return _context4.abrupt(\"return\");\n\n          case 8:\n            _context4.next = 10;\n            return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync());\n\n          case 10:\n            image = _context4.sent;\n            _context4.next = 13;\n            return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(image.uri, [{\n              resize: {\n                width: 1000\n              }\n            }], {\n              compress: 1\n            }));\n\n          case 13:\n            imageFormat = _context4.sent;\n            imageName = imageFormat.uri.split('/').pop();\n            imagePath = FileSystem.documentDirectory + imageName;\n            _context4.next = 18;\n            return _regeneratorRuntime.awrap(FileSystem.moveAsync({\n              from: imageFormat.uri,\n              to: imagePath\n            }));\n\n          case 18:\n            timestamp = (Date.now() / 1000 | 0).toString();\n            api_key = '335175835411183';\n            api_secret = 'WbphncPPGQmZ1UR2oSWDC2kyRYo';\n            cloud = 'amircloud';\n            hash_string = 'timestamp=' + timestamp + api_secret;\n            _context4.next = 25;\n            return _regeneratorRuntime.awrap(Crypto.digestStringAsync(Crypto.CryptoDigestAlgorithm.SHA1, hash_string));\n\n          case 25:\n            digest = _context4.sent;\n            signature = digest.toString();\n            upload_url = 'https://api.cloudinary.com/v1_1/' + cloud + '/image/upload';\n            xhr = new XMLHttpRequest();\n            xhr.open('POST', upload_url);\n\n            xhr.onload = function () {\n              var myHeaders = new Headers();\n              myHeaders.append(\"apikey\", \"739498b88588957\");\n              myHeaders.append('Accept', 'image / jpg');\n              var formdata = new FormData();\n              formdata.append(\"language\", \"fre\");\n              formdata.append(\"isOverlayRequired\", \"false\");\n              formdata.append(\"filetype\", \"jpg\");\n              formdata.append(\"url\", JSON.parse(xhr.response).url);\n              formdata.append(\"iscreatesearchablepdf\", \"false\");\n              formdata.append(\"issearchablepdfhidetextlayer\", \"false\");\n              formdata.append(\"OCREngine\", \"2\");\n              var requestOptions = {\n                method: 'POST',\n                headers: myHeaders,\n                body: formdata,\n                redirect: 'follow'\n              };\n              fetch(\"https://api.ocr.space/parse/image\", requestOptions).then(function (response) {\n                return response.text();\n              }).then(function _callee(result) {\n                var location;\n                return _regeneratorRuntime.async(function _callee$(_context3) {\n                  while (1) {\n                    switch (_context3.prev = _context3.next) {\n                      case 0:\n                        _context3.next = 2;\n                        return _regeneratorRuntime.awrap(Location.getCurrentPositionAsync());\n\n                      case 2:\n                        location = _context3.sent;\n                        fetch('https://a-mir-pi.herokuapp.com/plates', {\n                          method: 'post',\n                          headers: {\n                            'Accept': 'application/json, text/plain, */*',\n                            'Content-Type': 'application/json'\n                          },\n                          body: JSON.stringify({\n                            num: JSON.parse(result).ParsedResults[0].ParsedText,\n                            long: location.coords['latitude'],\n                            lat: location.coords['longitude']\n                          })\n                        }).then(function (res) {\n                          return res.json();\n                        }).then(function (res) {\n                          return console.log(res);\n                        });\n\n                      case 4:\n                      case \"end\":\n                        return _context3.stop();\n                    }\n                  }\n                });\n              }).catch(function (error) {\n                return console.log('error', error);\n              });\n            };\n\n            formData = new FormData();\n            formData.append('file', {\n              uri: imagePath,\n              type: 'image/png',\n              name: 'upload.png'\n            });\n            formData.append('timestamp', timestamp);\n            formData.append('api_key', api_key);\n            formData.append('signature', signature);\n            xhr.send(formData);\n            _context4.next = 39;\n            return _regeneratorRuntime.awrap(props.navigation.navigate('LastPlateScreen'));\n\n          case 39:\n            screen = _context4.sent;\n\n          case 40:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    }\n  }, React.createElement(View, {\n    style: styles.tileCam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/camera.png\"),\n    style: {\n      width: 100,\n      height: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    }\n  }), React.createElement(Button, {\n    title: \"Plaque\",\n    color: \"#e2e5ec\",\n    onPress: launchCam,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    }\n  })), React.createElement(View, {\n    style: styles.tileSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    }\n  }, React.createElement(Image, {\n    source: require(\"../assets/search.png\"),\n    style: {\n      width: 100,\n      height: 100\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    }\n  }), React.createElement(Button, {\n    title: \"Rechercher\",\n    color: \"#e2e5ec\",\n    onPress: function onPress() {\n      return props.navigation.navigate('SearchScreen');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    }\n  })));\n};\n\nLanding.navigationOptions = function (navData) {\n  return {\n    headerLeft: React.createElement(HeaderButtons, {\n      HeaderButtonComponent: MyHeaderButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      }\n    }, React.createElement(Item, {\n      title: \"Menu\",\n      iconName: \"ios-menu\",\n      onPress: function onPress() {\n        navData.navigation.toggleDrawer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      }\n    }))\n  };\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#e2e5ec\",\n    justifyContent: \"space-around\",\n    alignItems: \"center\"\n  }\n});\nexport default Landing;","map":{"version":3,"sources":["C:/Users/AmYre/ShowMe/screens/landing.js"],"names":["React","useState","HeaderButtons","Item","MyHeaderButton","ImagePicker","ImageManipulator","Permissions","Location","FileSystem","Crypto","Landing","props","textOCR","setTextOCR","allowCam","askAsync","CAMERA","result","status","Alert","alert","text","allowLoc","LOCATION","launchCam","allowedCam","allowedLoc","launchCameraAsync","image","manipulateAsync","uri","resize","width","compress","imageFormat","imageName","split","pop","imagePath","documentDirectory","moveAsync","from","to","timestamp","Date","now","toString","api_key","api_secret","cloud","hash_string","digestStringAsync","CryptoDigestAlgorithm","SHA1","digest","signature","upload_url","xhr","XMLHttpRequest","open","onload","myHeaders","Headers","append","formdata","FormData","JSON","parse","response","url","requestOptions","method","headers","body","redirect","fetch","then","getCurrentPositionAsync","location","stringify","num","ParsedResults","ParsedText","long","coords","lat","res","json","console","log","catch","error","formData","type","name","send","navigation","navigate","screen","styles","container","tileCam","require","height","tileSearch","navigationOptions","navData","headerLeft","toggleDrawer","StyleSheet","create","flex","backgroundColor","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\r\nimport { StyleSheet, Text, View, Button, Alert, ActivityIndicator, Platform } from \"react-native\";\r\nimport { HeaderButtons, Item } from 'react-navigation-header-buttons';\r\nimport MyHeaderButton from './MyHeaderButton';\r\nimport { Image } from 'react-native';\r\n\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as ImageManipulator from 'expo-image-manipulator';\r\nimport * as Permissions from 'expo-permissions';\r\nimport * as Location from 'expo-location';\r\nimport * as FileSystem from 'expo-file-system';\r\nimport * as Crypto from 'expo-crypto';\r\n\r\nconst Landing = props => {\r\n\r\n\tconst [textOCR, setTextOCR] = useState();\r\n\r\n\tconst allowCam = async () => {\r\n\t\tconst result = await Permissions.askAsync(Permissions.CAMERA)\r\n\r\n\t\tif (result.status !== 'granted') {\r\n\t\t\tAlert.alert('Permission nécessaire', 'Votre permission est nécessaire pour utiliser l\\'appareil photo', [{ text: 'Compris' }]);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst allowLoc = async () => {\r\n\t\tconst result = await Permissions.askAsync(Permissions.LOCATION)\r\n\r\n\t\tif (result.status !== 'granted') {\r\n\t\t\tAlert.alert('Permission localisation nécessaire', 'Votre permission est nécessaire afin d\\'aider les services concernés à localiser le véhicule scané', [{ text: 'Compris' }]);\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\t};\r\n\r\n\tconst launchCam = async () => {\r\n\t\tconst allowedCam = await allowCam();\r\n\t\tconst allowedLoc = await allowLoc();\r\n\t\tif (!allowedCam || !allowedLoc ) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst image = await ImagePicker.launchCameraAsync();\r\n\t\tconst imageFormat = await ImageManipulator.manipulateAsync(image.uri, [{ resize: {width:1000} }], {compress: 1});\r\n\t\tconst imageName = imageFormat.uri.split('/').pop();\r\n\t\tconst imagePath = FileSystem.documentDirectory + imageName;\r\n\r\n\t\tawait FileSystem.moveAsync({\r\n\t\t\tfrom: imageFormat.uri,\r\n\t\t\tto: imagePath\r\n\t\t})\r\n\r\n\t\tlet timestamp = (Date.now() / 1000 | 0).toString();\r\n\t\tlet api_key = '335175835411183'\r\n\t\tlet api_secret = 'WbphncPPGQmZ1UR2oSWDC2kyRYo'\r\n\t\tlet cloud = 'amircloud'\r\n\t\tlet hash_string = 'timestamp=' + timestamp + api_secret\r\n\t\tlet digest = await Crypto.digestStringAsync(\r\n\t\t\tCrypto.CryptoDigestAlgorithm.SHA1, hash_string\r\n\t\t)\r\n\t\tlet signature = digest.toString()\r\n\t\tlet upload_url = 'https://api.cloudinary.com/v1_1/' + cloud + '/image/upload'\r\n\r\n\t  \r\n\t\tlet xhr = new XMLHttpRequest();\r\n\t\txhr.open('POST', upload_url);\r\n\r\n\t\txhr.onload = () => {\r\n\r\n\t\t\tvar myHeaders = new Headers();\r\n\t\t\tmyHeaders.append(\"apikey\", \"739498b88588957\"); \r\n\t\t\tmyHeaders.append('Accept', 'image / jpg');\r\n\t\r\n\t\t\tvar formdata = new FormData();\r\n\t\t\tformdata.append(\"language\", \"fre\");\r\n\t\t\tformdata.append(\"isOverlayRequired\", \"false\");\r\n\t\t\tformdata.append(\"filetype\", \"jpg\");\r\n\t\t\tformdata.append(\"url\", JSON.parse(xhr.response).url);\r\n\t\t\tformdata.append(\"iscreatesearchablepdf\", \"false\");\r\n\t\t\tformdata.append(\"issearchablepdfhidetextlayer\", \"false\");\r\n\t\t\tformdata.append(\"OCREngine\", \"2\");\r\n\t\r\n\t\t\tvar requestOptions = {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: myHeaders,\r\n\t\t\tbody: formdata,\r\n\t\t\tredirect: 'follow'\r\n\t\t\t};\r\n\r\n\t\t\tfetch(\"https://api.ocr.space/parse/image\", requestOptions)\r\n\t\t\t\t.then(response => response.text())\r\n\t\t\t\t.then( async result =>  {\r\n\t\t\t\t\tconst location = await Location.getCurrentPositionAsync();\r\n\t\t\t\t\tfetch('https://a-mir-pi.herokuapp.com/plates', {\r\n\t\t\t\t\t\tmethod: 'post',\r\n\t\t\t\t\t\theaders: {\r\n\t\t\t\t\t\t\t'Accept': 'application/json, text/plain, */*',\r\n\t\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tbody: JSON.stringify({\r\n\t\t\t\t\t\t\tnum: JSON.parse(result).ParsedResults[0].ParsedText,\r\n\t\t\t\t\t\t\tlong: location.coords['latitude'],\r\n\t\t\t\t\t\t\tlat: location.coords['longitude']\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}).then(res=>res.json())\r\n\t\t\t\t\t\t.then(res => console.log(res));\r\n\t\t\t\t})\r\n\t\t\t\t.catch(error => console.log('error', error));\r\n\t\t\t\t\r\n\t\t};\r\n\t\t\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('file', {uri: imagePath, type: 'image/png', name: 'upload.png'});\r\n\t\tformData.append('timestamp', timestamp);\r\n\t\tformData.append('api_key', api_key);\r\n\t\tformData.append('signature', signature);\r\n\t\txhr.send(formData);\r\n\t\t\r\n\t\tconst screen = await props.navigation.navigate('LastPlateScreen');\r\n\t};\r\n\r\n\treturn (\r\n\t\t<View style={styles.container}>\r\n\t\t\t\r\n\t\t\t<View style={styles.tileCam}>\r\n\t\t\t\t<Image source={require('../assets/camera.png')} style={{width: 100,height: 100}} />\r\n\t\t\t\t<Button title=\"Plaque\" color=\"#e2e5ec\" onPress={launchCam} />\r\n\t\t\t</View>\r\n\t\t\t\r\n\t\t\t<View style={styles.tileSearch}>\r\n\t\t\t\t<Image source={require('../assets/search.png')} style={{width: 100,height: 100}} />\r\n\t\t\t\t<Button title=\"Rechercher\" color=\"#e2e5ec\"  onPress={() => props.navigation.navigate('SearchScreen')} />\r\n\t\t\t</View>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nLanding.navigationOptions = navData => {\r\n\treturn {\r\n\t  headerLeft: (\r\n\t\t<HeaderButtons HeaderButtonComponent={MyHeaderButton}>\r\n\t\t  <Item\r\n\t\t\ttitle=\"Menu\"\r\n\t\t\ticonName=\"ios-menu\"\r\n\t\t\tonPress={() => {\r\n\t\t\t  navData.navigation.toggleDrawer();\r\n\t\t\t}}\r\n\t\t  />\r\n\t\t</HeaderButtons>\r\n\t  )\r\n\t};\r\n  };\r\n\r\nconst styles = StyleSheet.create({\r\n\tcontainer: {\r\n\t\tflex: 1,\r\n\t\tbackgroundColor: \"#e2e5ec\",\r\n\t\tjustifyContent: \"space-around\",\r\n\t\talignItems: \"center\"\r\n\t}\r\n});\r\n\r\nexport default Landing"]},"metadata":{},"sourceType":"module"}